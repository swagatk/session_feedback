name: Deploy to GitHub Pages

# Run this workflow every time you push to the `main` branch
on:
  push:
    branches: [ main ]

# Set permissions for the GITHUB_TOKEN for deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository
        uses: actions/checkout@v4

      - name: Replace Firebase config placeholders
        run: |
          # Show file before replacement (for debugging)
          echo "File content before replacement:"
          grep -n "YOUR_.*_HERE" index.html || echo "No placeholders found"
          
          # Find and replace each placeholder in index.html with the secret value
          # Using '#' as the delimiter for sed to avoid conflicts with special chars in secrets
          # Adding the 'g' flag to replace all instances of each placeholder
          sed -i "s#YOUR_API_KEY_HERE#${{ secrets.FIREBASE_API_KEY }}#g" index.html
          sed -i "s#YOUR_AUTH_DOMAIN_HERE#${{ secrets.FIREBASE_AUTH_DOMAIN }}#g" index.html
          sed -i "s#YOUR_PROJECT_ID_HERE#${{ secrets.FIREBASE_PROJECT_ID }}#g" index.html
          sed -i "s#YOUR_STORAGE_BUCKET_HERE#${{ secrets.FIREBASE_STORAGE_BUCKET }}#g" index.html
          sed -i "s#YOUR_MESSAGING_SENDER_ID_HERE#${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}#g" index.html
          sed -i "s#YOUR_APP_ID_HERE#${{ secrets.FIREBASE_APP_ID }}#g" index.html
          
          # Show file after replacement (for debugging)
          echo "File content after replacement:"
          grep -n "YOUR_.*_HERE" index.html || echo "All placeholders successfully replaced"
      
      - name: Verify replacement
        run: |
          echo "Verifying file content..."
          echo "Checking for remaining placeholders:"
          grep -n "YOUR_.*_HERE" index.html || echo "No placeholders found - replacement successful!"
          echo "Checking for Firebase config section:"
          grep -A 10 -B 2 "apiKey:" index.html || echo "Firebase config section not found"
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the modified index.html
          path: '.'

  deploy:
    # This job needs the build job to finish first
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

